/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rmi;

import interfacermi.IOperacionesMath;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import javax.swing.JOptionPane;

/**
 *
 * @author Lorena Leal
 */
public class ClientRmi extends javax.swing.JFrame {

    IOperacionesMath servidorRmi;

    public ClientRmi() {
        String direccionServer = "localhost";
        int puertoServer = 5001;
        try {

            Registry registro = LocateRegistry.getRegistry(direccionServer, puertoServer);
            servidorRmi = (IOperacionesMath) (registro.lookup("operaciones"));

        } catch (RemoteException | NotBoundException e) {
            System.out.println("Error main cliente " + e);
        }

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        añadirCuenta = new javax.swing.JButton();
        modificarCuenta = new javax.swing.JButton();
        eliminarCuenta = new javax.swing.JButton();
        agregarSaldo = new javax.swing.JButton();
        retirarSaldo = new javax.swing.JButton();
        consultarSaldo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Banco");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu de opciones"));
        jPanel1.setLayout(new java.awt.GridLayout(6, 1, 0, 6));

        añadirCuenta.setText("Añadir cuenta");
        añadirCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirCuentaActionPerformed(evt);
            }
        });
        jPanel1.add(añadirCuenta);

        modificarCuenta.setText("Modificar cuenta");
        modificarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarCuentaActionPerformed(evt);
            }
        });
        jPanel1.add(modificarCuenta);

        eliminarCuenta.setText("Eliminar cuenta");
        eliminarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarCuentaActionPerformed(evt);
            }
        });
        jPanel1.add(eliminarCuenta);

        agregarSaldo.setText("Agregar saldo");
        agregarSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarSaldoActionPerformed(evt);
            }
        });
        jPanel1.add(agregarSaldo);

        retirarSaldo.setText("Retirar saldo");
        retirarSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirarSaldoActionPerformed(evt);
            }
        });
        jPanel1.add(retirarSaldo);

        consultarSaldo.setText("Consultar saldo");
        consultarSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarSaldoActionPerformed(evt);
            }
        });
        jPanel1.add(consultarSaldo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void añadirCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirCuentaActionPerformed
        try {
            int numero_cuenta = Integer.parseInt(JOptionPane.showInputDialog(rootPane,"Ingrese el numero de cuenta"));
            String propietario = JOptionPane.showInputDialog(rootPane, "Ingrese propietario");
            int saldo = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Ingrese el saldo"));
            int resultado = servidorRmi.insertarCuenta(numero_cuenta, propietario, saldo);
            JOptionPane.showMessageDialog(rootPane, resultado + "");
        } catch (RemoteException ex) {
            System.out.println("Error en ingreso " + ex);
        }
    }//GEN-LAST:event_añadirCuentaActionPerformed

    private void eliminarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarCuentaActionPerformed
        // TODO add your handling code here:
        try {
            int numero_cuenta = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Ingrese el numero de cuenta"));
            int resultado = servidorRmi.eliminarCuenta(numero_cuenta);
            JOptionPane.showMessageDialog(rootPane, resultado + "");
        } catch (RemoteException ex) {
            System.out.println("Error en ingreso " + ex);
        }

    }//GEN-LAST:event_eliminarCuentaActionPerformed

    private void modificarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarCuentaActionPerformed
        // TODO add your handling code here:
        try {

            int numero_cuenta = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Ingrese el numero de cuenta"));
            String propietario = JOptionPane.showInputDialog(rootPane, "Ingrese el nuevo propietario");
            int resultado = servidorRmi.modificarCuenta(numero_cuenta, propietario);
            JOptionPane.showMessageDialog(rootPane, resultado + "");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_modificarCuentaActionPerformed

    private void agregarSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarSaldoActionPerformed
        // TODO add your handling code here:
        try {
            int numero_cuenta = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Ingrese el numero de cuenta"));
            int valor = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Ingrese cantidad de dinero"));
            int resultado = servidorRmi.agregarSaldo(numero_cuenta, valor);
            JOptionPane.showMessageDialog(rootPane, resultado + "");
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_agregarSaldoActionPerformed

    private void consultarSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarSaldoActionPerformed
        // TODO add your handling code here:
        try {
            String numero_cuenta = JOptionPane.showInputDialog(rootPane, "Ingrese el numero de cuenta");
            String resultado = servidorRmi.consultar(numero_cuenta);
            JOptionPane.showMessageDialog(rootPane, resultado + "");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_consultarSaldoActionPerformed

    private void retirarSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirarSaldoActionPerformed
        // TODO add your handling code here:
         try {
            int numero_cuenta = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Ingrese el numero de cuenta"));
            int valor = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Ingrese cantidad de dinero"));
            int resultado = servidorRmi.retirarSaldo(numero_cuenta, valor);
            JOptionPane.showMessageDialog(rootPane, resultado + "");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_retirarSaldoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientRmi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientRmi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientRmi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientRmi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientRmi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarSaldo;
    private javax.swing.JButton añadirCuenta;
    private javax.swing.JButton consultarSaldo;
    private javax.swing.JButton eliminarCuenta;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton modificarCuenta;
    private javax.swing.JButton retirarSaldo;
    // End of variables declaration//GEN-END:variables
}
